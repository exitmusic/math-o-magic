extends templates/layout

block css
  link(rel='stylesheet', href='/css/home.css')

block content
  .container
    .row
      #game-board.span8
        .row
          #timer.span4
            h2 Time Remaining: 
              span.time-remaining
          #score.span4
        .row
          #question.span8
            h2
        .row
          #answer.span6.offset1
            form.well(action="/answer", method="post")
              label(for="user-answer") A.
              .input-append
                input#user-answer.span4(name="user-answer", type="text")
                input.btn.btn-primary(type="submit")
      #num-of-players.span4
        .row
          h3.span4 Number of players: 
            span.players
          ul.players
            li.player.template
          
block script
  script(src="/socket.io/socket.io.js")
  script
    //TODO: Look into using Express deployment environments to automatically change this
    //var socket = io.connect('http://localhost');
    var socket = io.connect('http://math-o-magic.nodejitsu.com');
    
    //TODO: Backbone.js should have a better way to do this
    socket.on('connect', function() {
      // A new player has joined the room
      socket.on('player-joined', function(numOfPlayers) {
        var playerEl = $('li.player.template').clone().removeClass('template').html('Player ' + numOfPlayers);
        
        $('#num-of-players span.players').html(numOfPlayers);
        $('ul.players').append(playerEl);
      });
      
      // A player has left the room
      socket.on('player-left', function(numOfPlayers) {
        $('#num-of-players span.players').html(numOfPlayers);
      });
      
      // Update global timer by seconds
      socket.on('timer', function(msg) {
        $('#timer span.time-remaining').html(msg);
      });
      
      // Notify the server that the client is ready for a new question
      socket.on('new-question-handshake', function(data) {
        socket.emit('new-question-handshake', true);
      });
      
      // Get the current question
      socket.on('question', function(question) {
        console.log(question);
        $('#question h2').html(question);
      });
    })